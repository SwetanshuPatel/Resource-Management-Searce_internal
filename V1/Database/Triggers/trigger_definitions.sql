after_delete_resources_projects	CREATE OR REPLACE FUNCTION public.update_projects_on_resource_delete()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n\tDELETE FROM projects\n\tWHERE resource_name = OLD.resource_name AND project_id = OLD.project_id;\n\tRETURN OLD;\nEND;\n$function$\n
after_utilization_changes	CREATE OR REPLACE FUNCTION public.delete_null_resource_utilization()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n\tDELETE FROM utilization\n\tWHERE resource_name IS NULL;\n\tRETURN NEW;\nEND;\n$function$\n
before_delete_interactions_trigger	CREATE OR REPLACE FUNCTION public.delete_from_action_item()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n\tDELETE FROM action_item\n\tWHERE action_item_id = OLD.action_item_id;\n\t\n\tRETURN OLD;\nEND;\n$function$\n
delete_resources_on_project_delete	CREATE OR REPLACE FUNCTION public.delete_related_resources()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n\tDELETE FROM resources\n\tWHERE resource_name = OLD.resource_name AND project_id = OLD.project_id;\n\t\n\tRETURN NULL;\nEND;\n$function$\n
delete_utilizations_trigger	CREATE OR REPLACE FUNCTION public.projects_delete_trigger()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n\tDELETE FROM utilization\n\tWHERE resource_name = OLD.resource_name AND project_name = OLD.project_name;\n\t\n\tRETURN OLD;\nEND;\n$function$\n
insert_or_update_interactions_trigger	CREATE OR REPLACE FUNCTION public.insert_or_update_action_item()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n\tIF TG_OP = 'INSERT' THEN\n\tINSERT INTO action_item (project_name, action_item_id, next_step)\n\tVALUES (NEW.project_name, NEW.action_item_id, 'Please Enter...');\n\t\n\tELSIF TG_OP = 'UPDATE' THEN\n\tUPDATE action_item\n\tSET project_name = NEW.project_name,\n\taction_item_id = NEW.action_item_id,\n\tnext_step = NEW.next_step \n\tWHERE action_item_id = NEW.action_item_id;\n\tEND IF;\n\t\n\tRETURN NEW;\nEND;\n$function$\n
insert_resource_trigger	CREATE OR REPLACE FUNCTION public.insert_resource()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n\tIF EXISTS (SELECT 1 FROM resources WHERE project_assigned = NEW.project_name AND resource_name = NEW.resource_name) THEN \n\tRAISE EXCEPTION 'Resource % already assigned', NEW.resource_name;\n\tEND IF;\n\t\n\tINSERT INTO resources (resource_name, project_assigned, time_on_project, time_off_project, skill_learned_learning, resource_id, project_id) VALUES (NEW.resource_name, NEW.project_name, 'NA', 'NA', 'NA', NEW.resource_id, NEW.project_id);\n\t\n\tRETURN NEW;\nEND;\n$function$\n
insert_update_utilization_trigger	CREATE OR REPLACE FUNCTION public.projects_insert_update_trigger()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n\tIF EXISTS (SELECT 1 FROM utilization WHERE resource_name = NEW.resource_name AND project_name = NEW.project_name) THEN \n\tUPDATE utilization\n\tSET \n\tresource_name = NEW.resource_name,\n\tproject_name = NEW.project_name\n\tWHERE \n\tresource_name = NEW.resource_name AND project_name = NEW.project_name;\n\t\n\tELSE \n\tINSERT INTO utilization (resource_name, project_name, billable_in_percent) VALUES (NEW.resource_name, NEW.project_name, 0);\n\tEND IF;\n\t\n\tRETURN NEW;\nEND;\n$function$\n
